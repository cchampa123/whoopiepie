# Generated by Django 3.1.8 on 2021-05-26 13:19

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CountTypes',
            fields=[
                ('count_type', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='MovementClass',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('count_types', models.ManyToManyField(to='workout.CountTypes')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreTypes',
            fields=[
                ('score_type', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='WhoopiePieUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.user')),
            ],
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('complete', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workout.whoopiepieuser')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('S', 'strength'), ('M', 'metcon')], max_length=1)),
                ('rounds', models.PositiveIntegerField(default=1)),
                ('round_duration', models.DurationField(default=datetime.timedelta)),
                ('round_type', models.CharField(choices=[('A', 'amrap'), ('F', 'fortime'), ('E', 'emom')], max_length=1)),
                ('score_number', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('score_time', models.DurationField(blank=True, default=datetime.timedelta)),
                ('extra_instructions', models.TextField(blank=True, default='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workout.whoopiepieuser')),
                ('workout_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workout.workout')),
            ],
        ),
        migrations.CreateModel(
            name='MovementInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_number', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('score_time', models.DurationField(blank=True, default=datetime.timedelta)),
                ('superset', models.PositiveIntegerField(default=2)),
                ('count_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workout.counttypes')),
                ('movement_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workout.movementclass')),
                ('score_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workout.scoretypes')),
                ('section_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workout.section')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workout.whoopiepieuser')),
                ('workout_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workout.workout')),
            ],
        ),
        migrations.AddField(
            model_name='movementclass',
            name='score_types',
            field=models.ManyToManyField(to='workout.ScoreTypes'),
        ),
    ]
